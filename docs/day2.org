* Day 2 API

** Matrix transpose

#+BEGIN_SRC C++
  __syncthreads();
#+END_SRC

** Box filter with texture memory

\TODO Should we bother with this section? We currently tell students to
reference texture code. Do the following functions cover everything? What
about declaring tex mem?

#+BEGIN_SRC C++
  __device__ T tex1Dfetch(cudaTextureObject_t texObj, int x);
  __device__ T tex1D(cudaTextureObject_t texObj, float x);
  __device__ T tex1DLod(cudaTextureObject_t texObj, float x, float level);
  __device__ T tex1DGrad(cudaTextureObject_t texObj, float x, float dx, float dy);
  __device__ T tex2D(cudaTextureObject_t texObj, float x, float y);
  __device__ T tex2DLod(cudaTextureObject_t texObj, float x, float y, float level);
  __device__ T tex2DGrad(cudaTextureObject_t texObj, float x, float y, float2 dx, float2 dy);
#+END_SRC

** Box filter with mallocPitched

#+BEGIN_SRC C++
  __host__ cudaError_t cudaMallocPitch ( void** devPtr, size_t* pitch, size_t width, size_t height );

  __host__ cudaError_t cudaMemcpy2D ( void* dst, size_t dpitch, const void* src, size_t spitch,
                                      size_t width, size_t height, cudaMemcpyKind kind );
#+END_SRC
